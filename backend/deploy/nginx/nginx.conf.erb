worker_rlimit_nofile 1048576;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
  }

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  upstream graphql {
    server <%= ENV["GRAPHQL_DOCKER_NAME"] %>:<%= ENV["GRAPHQL_DOCKER_PORT"] %> max_fails=5 fail_timeout=30;
  }

  <% if ENV["NGINX_USE_SSL"] == "true" %>     
  # SSL Settings
  ##
  ssl_certificate /etc/nginx/certs/<%= ENV["SSL_CERT"] %>;
  ssl_certificate_key /etc/nginx/certs/<%= ENV["SSL_KEY"] %>;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers TLS13+AESGCM+AES128:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_prefer_server_ciphers on;
  #############
  <% end %>

  <% if ENV["NGINX_FORCE_SSL"] == "true" %>  
  server {
    listen       <%= ENV["NGINX_DOCKER_PORT"] %>;    
    server_name  <%= ENV["GRAPHQL_DOMAIN"] %>;
    return 301 https://$server_name$request_uri;
    }
  <% end %>

  server {
    <% if ENV["NGINX_FORCE_SSL"] != "true" %>     
    listen       <%= ENV["NGINX_DOCKER_PORT"] %>;
    <% end %>
    <% if ENV["NGINX_USE_SSL"] == "true" %>
    listen       <%= ENV["NGINX_DOCKER_SSL_PORT"] %> ssl <% if ENV["HAPROXY_PROTOCOL"] != "false" %>proxy_protocol<% end %>;
    server_name  <%= ENV["GRAPHQL_DOMAIN"] %>;
    <% end %>


    <% if ENV["NGINX_USE_GZIP"] == "true" %>   
    gzip on;
    gzip_vary on;
    gzip_min_length 1000; # 1KB
    gzip_proxied any;
    gzip_comp_level  6;
    gzip_buffers 16 8k;
    gzip_types
      text/css
      text/plain
      text/javascript
      application/javascript
      application/json
      application/x-javascript
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    <% end %> 

    underscores_in_headers on;

    client_body_buffer_size     32k;
    client_header_buffer_size   8k;
    large_client_header_buffers 8 64k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 30;
    send_timeout 10;

    access_log off;

    tcp_nopush on;
    tcp_nodelay on;

    # Taken from nginx wiki. Qualified thru load testing
    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;
    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;

    #############################

    location / {
      add_header Allow "GET, POST, HEAD, OPTIONS" always;
      if ( $request_method !~ ^(GET|POST|HEAD|OPTIONS)$ ) {
        return 405;
      }
      # if ($request_method = 'OPTIONS') {
      #   add_header 'Access-Control-Allow-Origin' '*';
      #   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      #   #
      #   # Custom headers and headers various browsers *should* be OK with but aren't
      #   #
      #   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #   #
      #   # Tell client that this pre-flight info is valid for 20 days
      #   #
      #   add_header 'Access-Control-Max-Age' 1728000;
      #   add_header 'Content-Type' 'text/plain; charset=utf-8';
      #   add_header 'Content-Length' 0;
      #   return 204;
      # }
      # if ($request_method = 'POST') {
      #     add_header 'Access-Control-Allow-Origin' '*';
      #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      # }
      # if ($request_method = 'GET') {
      #     add_header 'Access-Control-Allow-Origin' '*';
      #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      # }

      # if ($request_method = 'HEAD') {
      #   add_header 'Access-Control-Allow-Origin' '*';
      #   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
      #   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      # }
      proxy_pass http://graphql;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header        Host               $http_host;
      proxy_set_header        X-Real-IP          $remote_addr;
      proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
      <% if ENV["HAPROXY_PROTOCOL"] != "false" %>     
        set_real_ip_from <%= ENV["APP_NAME"] %>.haproxy;
        real_ip_header proxy_protocol;
        real_ip_recursive on;
      <% end %>
    }
    <% if ENV["SSL_CHALLENGE"] != "false" %>     
    location ^~ /.well-known/acme-challenge/<%= ENV["SSL_CHALLENGE"] %> { alias /etc/nginx/certs/<%= ENV["SSL_CHALLENGE"] %>; }
    <% end %>
  }
}
