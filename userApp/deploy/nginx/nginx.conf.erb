worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
  }

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  upstream graphql {
    server <%= ENV["GRAPHQL_SERVER_HOST"] %>:<%= ENV["GRAPHQL_SERVER_PORT"] %> max_fails=5 fail_timeout=30;
  }
  <% if ENV["NGINX_USE_PRERENDER"] == "true" %>     
  upstream prerender {
    server <%= ENV["PRERENDER_DOCKER_NAME"] %>:<%= ENV["PRERENDER_DOCKER_PORT"] %> max_fails=5 fail_timeout=30;
  }
  <% end %>
  
  <% if ENV["NGINX_USE_SSL"] == "true" %>     
  # SSL Settings
  ##
  ssl_certificate /etc/nginx/certs/<%= ENV["SSL_CERT"] %>;
  ssl_certificate_key /etc/nginx/certs/<%= ENV["SSL_KEY"] %>;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers TLS13+AESGCM+AES128:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_prefer_server_ciphers on;
  #############
  <% end %>

  <% if ENV["NGINX_FORCE_SSL"] == "true" %>       
  server {
    listen       <%= ENV["NGINX_DOCKER_PORT"] %>;    
    server_name  <%= ENV["APP_DOMAIN"] %>;
    return 301 https://$server_name$request_uri;
  }
  <% end %>

  server {
  <% if ENV["NGINX_FORCE_SSL"] != "true" %>     
    listen       <%= ENV["NGINX_DOCKER_PORT"] %>;
  <% end %>
  <% if ENV["NGINX_USE_SSL"] == "true" %>     
    listen       <%= ENV["NGINX_DOCKER_SSL_PORT"] %> ssl <% if ENV["HAPROXY_PROTOCOL"] != "false" %>proxy_protocol<% end %>;
  <% end %>
  server_name  <%= ENV["APP_DOMAIN"] %>;


  <% if ENV["NGINX_USE_GZIP"] == "true" %>   
  gzip on;
  gzip_vary on;
  gzip_min_length 1000; # 1KB
  gzip_proxied any;
  gzip_comp_level  6;
  gzip_buffers 16 8k;
  gzip_types
    text/css
    text/plain
    text/javascript
    application/javascript
    application/json
    application/x-javascript
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    image/svg+xml
    image/x-icon
    application/rss+xml
    application/atom_xml;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  <% end %> 

  underscores_in_headers on;

  client_body_buffer_size     32k;
  client_header_buffer_size   8k;
  large_client_header_buffers 8 64k;

  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;

  access_log off;

  root /var/www/html/<%= ENV["APP_NAME"] %>/<%= ENV["DEPLOY_ID"] %>/<%= ENV["APP_DIR"] %>;
  index index.html index.htm;
  
  location / {
    <% if ENV["NGINX_USE_PRERENDER"] == "true" %> 
    try_files $uri @prerender;
    <% else %>
    default_type "text/html";
    try_files $uri $uri/ /index.html;
    <% end %>

    <% if ENV["NGINX_BASIC_AUTH_ENABLED"] == "true" %>
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;
    <% end %>      
  }

  <% if ENV["NGINX_USE_PRERENDER"] == "true" %> 
  location @prerender {
    # proxy_set_header X-Prerender-Token <YOUR_PRERENDER_TOKEN>;
    set $prerender 0;
    if ($http_user_agent ~* "Googlebot|Mediapartners-Google|AdsBot-Google|bingbot|yahooseeker|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
      set $prerender 1;
    }
    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
    }
    if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
    }
    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
      set $prerender 0;
    }
    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
    #resolver 8.8.8.8;
    if ($prerender = 1) {
      #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
      set $prerender "prerender";
      rewrite .* /<% if ENV["NGINX_FORCE_SSL"] == "true" %>https://<%= ENV["APP_DOMAIN"] %><% else %>http://<%= ENV["NGINX_DOCKER_NAME"] %><% end %>$request_uri? break;
      proxy_pass http://$prerender;
    }
    if ($prerender = 0) {
        rewrite .* /index.html last;
    }
  }
  <% end %>
    location /graphql {
      #proxy_ssl_server_name on;
      proxy_pass <%= ENV["GRAPHQL_SERVER_PROTOCOL"]%>://graphql;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header        Host               $http_host;
      proxy_set_header        X-Real-IP          $remote_addr;
      proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
      <% if ENV["HAPROXY_PROTOCOL"] != "false" %>     
      set_real_ip_from <%= ENV["APP_NAME"] %>.haproxy;
      real_ip_header proxy_protocol;
      real_ip_recursive on;
      <% end %>
    }
    <% if ENV["SSL_CHALLENGE"] != "false" %>     
    location ^~ /.well-known/acme-challenge/<%= ENV["SSL_CHALLENGE"] %> { alias /etc/nginx/certs/<%= ENV["SSL_CHALLENGE"] %>; }
    <% end %>
  }      
}
